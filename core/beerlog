#! /bin/bash

THIS_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"		# Where this script lives

. $THIS_DIR/config.sh

SCAN_PID_FILE=$RUN_DIR/scan.pid
DUMP_PID_FILE=$RUN_DIR/dump.pid

# make sure our environment exists
mkdir -p $RUN_DIR

if [ ! -d $RUN_DIR ]
then
	echo "The run dir $RUN_DIR does not exist and can't be made. Might want to check permissions or something."
	exit 1
fi

mkdir -p $DATA_DIR

if [ ! -d $DATA_DIR ]
then
	echo "The data dir $DATA_DIR does not exist and can't be made. Might want to check permissions or something."
	exit 2
fi

do_start() {
	
	# blueviz crappiness
	service bluetooth restart
	hcitool lescan --duplicates 2>&1 > /dev/null &
	echo $! > $SCAN_PID_FILE
	if [[ $? != 0 ]]
	then
		echo "scan process refused to start for some reason, aborting"
		return 1;
	fi
	hcidump -t --raw | grep -C 1 "00 02 15 A4 95" | grep --invert-match '\-\-' | sed "N ;s/\n//; N; s/\n//"| tr '\-:' '  ' | sed "s/\.[0-9][0-9][0-9][0-9][0-9][0-9]//" | awk '{printf "INSERT INTO data VALUES (%s, %s, %d, %d, %d);\n", mktime($1" "$2" "$3" "$4" "$5" "$6), $34, strtonum("0x"$47$48), strtonum("0x"$49$50), strtonum("0x"$51)}' | mysql -D beerlogger &
	echo $! > $DUMP_PID_FILE
	
	service mysql start
}

do_stop() {
	DUMP_PID=`cat $DUMP_PID_FILE`
	SCAN_PID=`cat $SCAN_PID_FILE`

	kill $DUMP_PID
	rm -f $DUMP_PID_FILE
	
	kill $SCAN_PID
	rm -f $SCAN_PID_FILE
	
	echo "Beer logger service stopped"
}

do_status() {
	if [ -e $SCAN_PID_FILE ]
	then
		SCAN_PID=`cat $SCAN_PID_FILE`
		
		ps -hq $SCAN_PID > /dev/null 
		if [[ $? -ne 0 ]]
		then
			echo "pidfile exists but scan process appears to be dead ($SCAN_PID)"
		else
			if [ -e $DUMP_PID_FILE ]
			then
				DUMP_PID=`cat $DUMP_PID_FILE`
				
				ps -hq $DUMP_PID > /dev/null 
				if [[ $? -ne 0 ]]
				then
					echo "pidfile exists but dump process appears to be dead ($SCAN_PID)"
				else
					echo -n "Both processes OK [$SCAN_PID $DUMP_PID]"
				fi
			else
				# no DUMP pidfile
				
				pscount=`ps aux | grep "hcidump" | wc -l`
				if [[ $pscount -gt 1 ]]
				then
					echo "No dump pidfile was found, however a process was found! You might want to investigate, it's probably orphaned"
					ps aux | grep "hcidump" 
				fi
			fi
		fi
	else
		# no scan pidfile
		
		pscount=`ps aux | grep "lescan" | wc -l`
		if [[ $pscount -gt 1 ]]
		then
			echo "No scan pidfile was found, however a process was found! You might want to investigate, it's probably orphaned"
			ps aux | grep "lescan" 
		else
			echo "Not running"
		fi
	fi


}

# Main controller
# This works with systemd as well as standalone but it's not a perfect implementation. 
# In particular systemd will not pass through the status command and it doesn't really like having children
case $1 in
	start)
		do_start
		;;
	stop)
		do_stop
		;;
	status)
		do_status
		;;
	restart)
		do_stop
		sleep 2
		do_start
		;;
	*)
		echo Action \'"$@"\' is not supported.
		;;
esac

exit 0
